/**
 * <copyright>
 * 
 * Copyright (c) 2012 itemis and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors: 
 *     itemis - Initial API and implementation
 * 
 * </copyright>
 */
package org.eclipse.sphinx.platform.perfs

import java.lang.management.ManagementFactory

class PerformanceStats {
	contains Measurement[] measurements
}

class Measurement {
	String name
	int count
	long total
	boolean running
	long startTime
	
	derived long averageTime get {
		// return count > 0 ? total / count : 0
		if (count > 0) {
			return total / count
		}
		return 0
	}
	contains Measurement[] children
	
	op void start() {
		running = true
    	startTime = ManagementFactory::getThreadMXBean().getCurrentThreadCpuTime()
	}
	
	op void stop() {
		if (isRunning()) {
     		running = false 
			val long interval = ManagementFactory::getThreadMXBean().getCurrentThreadCpuTime() - startTime
      		count = count + 1 //count++
      		total = total + interval //total += interval
		}
	}
}