<project name="org.eclipse.sphinx.releng.builds" default="build">
	
	<property file="${user.home}/sphinx/build.properties"/>
	
	<property name="eclipse.mirror" value="http://download.eclipse.org"/>
	<property name="eclipse.svn" value="https://dev.eclipse.org/svnroot"/>
	<property name="eclipse.director.url" value="${eclipse.mirror}/tools/buckminster/products/director_latest.zip"/>
	
	<property name="buckminster.home" value="${basedir}/buckminster"/>
	
	<property name="buckminster.loglevel" value="info"/>
	<property name="buckminster.jvmarg" value=""/>
	<property name="buckminster.arg" value=""/>
	
	<property name="tp.release" value="helios"/>
	
	<target name="clean.downloads">
		<delete dir="downloads"/>
	</target>
	
	<target name="clean.setup">
		<delete dir="director"/>
		<delete dir="buckminster"/>
	</target>
	
	<target name="clean.tp">
		<delete dir="tp"/>
	</target>
	
	<target name="clean">
		<delete dir="workspace"/>
		<delete dir="temp"/>
		<delete dir="output"/>
		<delete dir="junit-workspace"/>
		<delete file="junit-output.xml"/>
	</target>
	
	<target name="clean.all" depends="clean, clean.downloads, clean.setup, clean.tp"/>
	
	<target name="setup.check">
		<available property="director.present" value="true" file="${basedir}/director"/>
		<available property="buckminster.present" value="true" file="${basedir}/buckminster"/>
		<available property="tp.present" value="true" file="${basedir}/tp"/>
		<property name="tp.present" value="false"/>
	</target>
	
	<target name="setup.director" unless="director.present">
		<!--
		Use this if this Ant script is ran outside of the Eclipse VM and an Eclipse is available locally.
		<property name="eclipse.home" value="C:/eclipse"/>
		<path id="equinox.launcher.path">
			<fileset dir="${eclipse.home}/plugins" includes="org.eclipse.equinox.launcher_*.jar"/>
		</path>
		<property name="director.launcher" refid="equinox.launcher.path"/>
		-->
		
		<!--
		Use this if this Ant script is ran inside of the Eclipse VM.
		<property name="director.launcher" value="${java.class.path}"/>
		-->
		
		<!--
		Use this if no Eclipse is available at all.
		-->
		<mkdir dir="downloads"/>
		<get src="${eclipse.director.url}" dest="downloads/director_latest.zip" usetimestamp="true"/>
		<unzip src="downloads/director_latest.zip" dest="${basedir}"/>
	</target>
	
	<target name="resolve.director.launcher" depends="setup.director">
		<path id="director.launcher.path">
			<fileset dir="${basedir}/director/plugins" includes="org.eclipse.equinox.launcher_*.jar"/>
		</path>
		<property name="director.launcher" refid="director.launcher.path"/>
	</target>
	
	<target name="setup.buckminster" depends="resolve.director.launcher" unless="buckminster.present">
		<java jar="${director.launcher}" fork="true" failonerror="true" jvm="${java.home}/bin/java">
			<arg line="-application org.eclipse.equinox.p2.director"/>
			<arg line="-repository ${eclipse.mirror}/tools/buckminster/headless-3.7/"/>
			<arg line="-destination ${buckminster.home}"/>
			<arg line="-profile Buckminster"/>
			<arg line="-installIU org.eclipse.buckminster.cmdline.product,org.eclipse.buckminster.pde.headless.feature.feature.group"/>
		</java>
		<java jar="${director.launcher}" fork="true" failonerror="true" jvm="${java.home}/bin/java">
			<arg line="-application org.eclipse.equinox.p2.director"/>
			<arg line="-repository http://download.cloudsmith.com/buckminster/external-3.7/"/>
			<arg line="-destination ${buckminster.home}"/>
			<arg line="-profile Buckminster"/>
			<arg line="-installIU org.eclipse.buckminster.subclipse.headless.feature.feature.group"/>
			
			<syspropertyset>
				<propertyref prefix="http."/>
			</syspropertyset>
		</java>
		<java jar="${director.launcher}" fork="true" failonerror="true" jvm="${java.home}/bin/java">
			<arg line="-application org.eclipse.equinox.p2.director"/>
			<arg line="-repository ${eclipse.mirror}/releases/indigo/"/>
			<arg line="-destination ${buckminster.home}"/>
			<arg line="-profile Buckminster"/>
			<arg line="-installIU org.eclipse.equinox.p2.repository.tools"/>
		</java>
	</target>
	
	<target name="resolve.buckminster.launcher" depends="setup.buckminster">
		<path id="buckminster.launcher.path">
			<fileset dir="${buckminster.home}/plugins" includes="org.eclipse.equinox.launcher_*.jar"/>
		</path>
		<property name="buckminster.launcher" refid="buckminster.launcher.path"/>
	</target>
	
	<target name="setup" depends="setup.check, setup.director, resolve.director.launcher, setup.buckminster, resolve.buckminster.launcher">
	</target>
	
	<target name="build" depends="clean, setup">
		<tstamp/>
		<property name="date" value="${DSTAMP}"/>
		<property name="time" value="${TSTAMP}"/>
		<property name="timestamp" value="${date}-${time}"/>
		<property name="buildType" value=""/>
		<property name="buildId" value="${buildType}${timestamp}"/>
		
		<java jar="${buckminster.launcher}" fork="true" failonerror="true" clonevm="true" jvm="${java.home}/bin/java">
			<jvmarg line="-Xms40m"/>
			<jvmarg line="-Xmx256m"/>
			<jvmarg line="${buckminster.jvmarg}"/>
			
			<sysproperty key="eclipse.mirror" value="${eclipse.mirror}"/>
			<sysproperty key="eclipse.svn" value="${eclipse.svn}"/>
			
			<sysproperty key="tp.present" value="${tp.present}"/>
			<sysproperty key="tp.release" value="${tp.release}"/>
			
			<sysproperty key="eclipse.p2.MD5Check" value="false"/>
			<sysproperty key="eclipse.p2.mirrors" value="false"/>
			
			<sysproperty key="buildId2" value="${buildId}"/>
			
			<arg line="-data workspace"/>
			<arg line="--loglevel ${buckminster.loglevel}"/>
			<arg line="--scriptfile buckminster.script"/>
			<arg line="${buckminster.arg}"/>
		</java>
		
		<!-- Invoke the post.build target using antRunner for availability of repo2runnable task. -->
		<java jar="${buckminster.launcher}" fork="true" failonerror="true" clonevm="true" jvm="${java.home}/bin/java">
			<sysproperty key="buildId" value="${buildId}"/>
			
			<arg line="-data workspace"/>
			<arg line="-application org.eclipse.ant.core.antRunner"/>
			<arg line="post.build"/>
		</java>
	</target>
	
	<target name="post.build">
		<mkdir dir="output/zips"/>
		<mkdir dir="output/folders"/>
		
		<property name="parent.repo" value="file:${basedir}/output/org.eclipse.sphinx.parent_0.7.0-eclipse.feature/site.p2"/>
		
		<p2.mirror>
			<source location="${parent.repo}"/>
			<destination location="file:${basedir}/output/folders/update" name="org.eclipse.sphinx" compressed="true"/>
			<iu id="org.eclipse.sphinx.sdk.feature.group"/>
			<iu id="org.eclipse.sphinx.examples.feature.group"/>
			<iu id="org.eclipse.sphinx.examples.source.feature.group"/>
			<iu id="org.eclipse.sphinx.testutils.feature.group"/>
			<iu id="org.eclipse.sphinx.testutils.source.feature.group"/>
			<iu id="org.eclipse.sphinx.thirdparty.feature.group"/>
			<slicingOptions followStrict="true"/>
		</p2.mirror>
		<p2.mirror source="${parent.repo}" destination="file:${basedir}/output/folders/sdk">
			<iu id="org.eclipse.sphinx.sdk.feature.group"/>
			<slicingOptions followStrict="true"/>
		</p2.mirror>
		<p2.mirror source="${parent.repo}" destination="file:${basedir}/output/folders/runtime">
			<iu id="org.eclipse.sphinx.feature.group"/>
			<slicingOptions followStrict="true"/>
		</p2.mirror>
		<p2.mirror source="${parent.repo}" destination="file:${basedir}/output/folders/examples">
			<iu id="org.eclipse.sphinx.examples.feature.group"/>
			<iu id="org.eclipse.sphinx.examples.source.feature.group"/>
			<slicingOptions followStrict="true"/>
		</p2.mirror>
		<p2.mirror source="${parent.repo}" destination="file:${basedir}/output/folders/testutils">
			<iu id="org.eclipse.sphinx.testutils.feature.group"/>
			<iu id="org.eclipse.sphinx.testutils.source.feature.group"/>
			<slicingOptions followStrict="true"/>
		</p2.mirror>
		
		<p2.repo2runnable source="file:${basedir}/output/folders/sdk" destination="file:${basedir}/output/folders/sdk.runnable/eclipse"/>
		<p2.repo2runnable source="file:${basedir}/output/folders/runtime" destination="file:${basedir}/output/folders/runtime.runnable/eclipse"/>
		<p2.repo2runnable source="file:${basedir}/output/folders/examples" destination="file:${basedir}/output/folders/examples.runnable/eclipse"/>
		<p2.repo2runnable source="file:${basedir}/output/folders/testutils" destination="file:${basedir}/output/folders/testutils.runnable/eclipse"/>
		
		<zip destfile="output/zips/mdt-sphinx-Update-0.7.0.${buildId}.zip">
			<zipfileset dir="output/folders/update"/>
		</zip>
		<zip destfile="output/zips/mdt-sphinx-SDK-0.7.0.${buildId}.zip">
			<zipfileset dir="output/folders/sdk.runnable" excludes="eclipse/*.jar"/>
		</zip>
		<zip destfile="output/zips/mdt-sphinx-runtime-0.7.0.${buildId}.zip">
			<zipfileset dir="output/folders/runtime.runnable" excludes="eclipse/*.jar"/>
		</zip>
		<zip destfile="output/zips/mdt-sphinx-examples-0.7.0.${buildId}.zip">
			<zipfileset dir="output/folders/examples.runnable" excludes="eclipse/*.jar"/>
		</zip>
		<zip destfile="output/zips/mdt-sphinx-testutils-0.7.0.${buildId}.zip">
			<zipfileset dir="output/folders/testutils.runnable" excludes="eclipse/*.jar"/>
		</zip>
	</target>
	
</project>